-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.addresses
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer,
    address character varying(150) COLLATE pg_catalog."default" NOT NULL,
    country character varying(30) COLLATE pg_catalog."default" NOT NULL,
    region character varying(20) COLLATE pg_catalog."default" NOT NULL,
    city character varying(30) COLLATE pg_catalog."default" NOT NULL,
    zip_code character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Addresses_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.brands
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    brand_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Brands_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.car_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    type_name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "CarTypes_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.car_type_details
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    car_id integer,
    car_type_id integer,
    CONSTRAINT "CarTypeDetails_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cars
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    model_id integer,
    brand_id integer,
    year integer NOT NULL,
    color character varying(20) COLLATE pg_catalog."default" NOT NULL,
    rental_fee double precision NOT NULL,
    licence_plate character varying(11) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Cars_pkey" PRIMARY KEY (id),
    CONSTRAINT "Cars_licence_plate_key" UNIQUE (licence_plate)
);

CREATE TABLE IF NOT EXISTS public.discounts
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer,
    discount_code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    percentage double precision NOT NULL,
    CONSTRAINT "Discounts_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(20) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    role character varying(30) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(11) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    gender character varying(15) COLLATE pg_catalog."default",
    birth_date date NOT NULL,
    CONSTRAINT "Employees_pkey" PRIMARY KEY (id),
    CONSTRAINT unique_employee_email UNIQUE (email),
    CONSTRAINT unique_employee_username UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.models
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    model_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    brand_id integer,
    fuel_type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    engine_power character varying(5) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Models_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    rental_id integer,
    payment_date date NOT NULL,
    amount double precision NOT NULL,
    CONSTRAINT "Payments_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rentals
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer,
    car_id integer,
    rental_start_date date NOT NULL,
    rental_end_date date NOT NULL,
    total_cost double precision NOT NULL,
    CONSTRAINT "Rentals_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer,
    car_id integer,
    rating double precision NOT NULL,
    comment text COLLATE pg_catalog."default",
    review_date date NOT NULL DEFAULT CURRENT_DATE,
    CONSTRAINT "Reviews_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(11) COLLATE pg_catalog."default" NOT NULL,
    gender character varying(10) COLLATE pg_catalog."default",
    birth_date date NOT NULL,
    CONSTRAINT "Users_pkey" PRIMARY KEY (id),
    CONSTRAINT unique_email UNIQUE (email),
    CONSTRAINT unique_username UNIQUE (username)
);

ALTER TABLE IF EXISTS public.addresses
    ADD CONSTRAINT "FK_USERID_USERS" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.car_type_details
    ADD CONSTRAINT "FK_CARTYPEDETAILS_CARS" FOREIGN KEY (car_id)
    REFERENCES public.cars (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.car_type_details
    ADD CONSTRAINT "FK_CARTYPEDETAILS_CARTYPES" FOREIGN KEY (car_type_id)
    REFERENCES public.car_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cars
    ADD CONSTRAINT "FK_BRAND_CAR" FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cars
    ADD CONSTRAINT "FK_MODELID_MODELS" FOREIGN KEY (model_id)
    REFERENCES public.models (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.discounts
    ADD CONSTRAINT "FK_USERID_USERS" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.models
    ADD CONSTRAINT "FK_BRANDID_MODELS" FOREIGN KEY (brand_id)
    REFERENCES public.brands (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT "FK_RENTALID_RENTALS" FOREIGN KEY (rental_id)
    REFERENCES public.rentals (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rentals
    ADD CONSTRAINT "FK_CARID_CARS" FOREIGN KEY (car_id)
    REFERENCES public.cars (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.rentals
    ADD CONSTRAINT "FK_USERID_USERS" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT "FK_CARID_CARS" FOREIGN KEY (car_id)
    REFERENCES public.cars (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT "FK_USERID_USERS" FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;